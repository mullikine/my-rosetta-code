* advice
As it turns out you need ~&rest r~

#+BEGIN_SRC emacs-lisp :async :results verbatim drawer
  ;; For some reason this needs arg as a parameter
  ;; Advice functions must need to have at least one argument
  (defun undo-tree-save-root (&rest r)
    ;; (require 'undo-tree)
    (undo-tree-save-state-to-register ?^))

  (advice-add 'save-buffer :after 'undo-tree-save-root)
#+END_SRC

* after
#+BEGIN_SRC emacs-lisp :async
  (advice-add
   'wiki-summary
   :after '(lambda
             (&rest args)
             (call-interactively
              'other-window)))
#+END_SRC

* before
#+BEGIN_SRC emacs-lisp :async
  (defun wrap2 (orig-fun &rest args)
    (message "shr-copy-url called with args %S" args)
    (let ((res (apply orig-fun args)))
      (message "shr-copy-url returned %S" res)
      res))
  (advice-add 'shr-copy-url :around #'wrap2)
#+END_SRC

* advice remove
#+BEGIN_SRC emacs-lisp :async :results verbatim drawer
  (advice-remove
   'anaconda-mode-documentation-view
   (lambda () (markdown-mode)))
#+END_SRC

* advice remove
#+BEGIN_SRC emacs-lisp :async :results verbatim drawer
  (defun sh/ad-unminimise-ex-parse (string &optional syntax start)
    (setq string (umn string)))
  
  (advice-add 'evil-ex-parse :before 'sh/ad-unminimise-ex-parse)
  (advice-remove 'evil-ex-parse 'sh/ad-unminimise-ex-parse)
  
  (defun sh/ad-unminimise-ex-parse-command (string)
    (setq string (umn string)))
  
  (advice-add 'evil-ex-parse-command :before 'sh/ad-unminimise-ex-parse-command)
  (advice-remove 'evil-ex-parse-command 'sh/ad-unminimise-ex-parse-command)
#+END_SRC